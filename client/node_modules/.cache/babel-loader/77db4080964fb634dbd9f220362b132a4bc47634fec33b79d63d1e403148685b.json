{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya\\\\Desktop\\\\Lecture-Scheduling-Module-master\\\\client\\\\src\\\\components\\\\IndividualCourse.jsx\",\n  _s = $RefreshSig$();\n// IndividualCourse.js\n\n// Import React and necessary modules\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Logout from \"./Logout\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { getSchedule, allInstructors, getCourseName, addSchedule, checkAvailable } from \"../utils/APIRoutes\";\nimport axios from \"axios\";\n\n// Define color schemes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ceruleanBlue = \"#007ba7\";\nconst ivoryCream = \"#fffdd0\";\nconst darkGray = \"#333333\";\nconst sageGreen = \"#8f9779\";\nconst dustyRose = \"#d2b48c\";\nconst velvetNavy = \"#001f3f\";\nconst white = \"#ffffff\";\n\n// Styled components with color schemes\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0;\n  height: 100vh;\n  background-color: ${ceruleanBlue};\n`;\n_c = Container;\nconst TopBar = styled.div`\n  width: 100%;\n  background: ${velvetNavy};\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n_c2 = TopBar;\nconst Heading = styled.h1`\n  color: ${white};\n  font-size: 24px;\n  font-weight: bold;\n  margin-top: 5px;\n`;\n_c3 = Heading;\nconst CourseName = styled.h1`\n  margin-bottom: 20px;\n  color: ${ivoryCream};\n`;\n_c4 = CourseName;\nconst ContentWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 20px;\n`;\n_c5 = ContentWrapper;\nconst CardList = styled.div`\n  width: 100%;\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n`;\n_c6 = CardList;\nconst NoScheduleMessage = styled.p`\n  width: 100%;\n  text-align: center;\n  font-size: 18px;\n  color: ${white};\n`;\n_c7 = NoScheduleMessage;\nconst Card = styled.div`\n  background-color: #ffffff;\n  border: 1px solid #ccc;\n  border-radius: 15px;\n  margin-bottom: 20px;\n  padding: 20px;\n  width: calc(45% - 20px);\n  box-sizing: border-box;\n  transition: transform 0.2s ease-in-out;\n  overflow: hidden;\n\n  &:hover {\n    transform: scale(1.06);\n  }\n\n  img {\n    width: 100%;\n    max-height: 200px;\n    object-fit: cover;\n    border-radius: 15px 15px 0 0;\n  }\n\n  .card-content {\n    padding: 10px;\n  }\n\n  h2 {\n    margin-bottom: 10px;\n    font-size: 20px;\n  }\n\n  p {\n    margin-bottom: 5px;\n    font-size: 16px;\n  }\n`;\n_c8 = Card;\nconst Form = styled.form`\n  width: 45%;\n  background-color: ${sageGreen};\n  color: ${darkGray};\n  border: 1px solid transparent;\n  border-radius: 15px;\n  text-align: center;\n  padding: 20px;\n\n  select,\n  input {\n    margin: 10px 0;\n    padding: 10px;\n    width: calc(100% - 20px);\n    border-radius: 5px;\n    border: 1px solid ${darkGray};\n    box-sizing: border-box;\n  }\n\n  button {\n    margin-top: 20px;\n    padding: 10px;\n    background-color: ${dustyRose};\n    color: ${white};\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-size: 16px;\n\n    &:hover {\n      background-color: ${sageGreen};\n    }\n  }\n`;\n\n// IndividualCourse component\n_c9 = Form;\nconst IndividualCourse = () => {\n  _s();\n  // Hooks for managing state\n  const {\n    courseId\n  } = useParams();\n  const navigate = useNavigate();\n  const [dropDropUser, setDropUser] = useState(undefined);\n  const [id, setId] = useState(null);\n  const [courseName, setCourseName] = useState(\"Dummy Course\");\n  const [instructorData, setInstructorData] = useState([]);\n  const [selectedInstructor, setSelectedInstructor] = useState(\"\");\n  const [schedule, setSchedule] = useState([]);\n\n  // Keys for local storage\n  const adminKey = localStorage.getItem(\"secret-key-admin\");\n  const userKey = localStorage.getItem(\"secret-key\");\n\n  // Effect hook to check user authentication\n  useEffect(() => {\n    if (adminKey) {\n      const adminUserData = JSON.parse(adminKey);\n      setId(adminUserData._id);\n    } else if (userKey) {\n      navigate(\"/instructor\");\n    } else {\n      navigate(\"/\");\n    }\n  }, [navigate, adminKey, userKey]);\n\n  // Function to update instructor data\n  const updateInstructorData = instructor => {\n    const existingInstructor = instructorData.find(i => i === instructor.username);\n    if (!existingInstructor) {\n      setInstructorData(prevData => [...prevData, instructor.username]);\n    }\n  };\n\n  // Function to get course name by ID\n  const getCourseNameById = async courseId => {\n    try {\n      const response = await axios.get(`${getCourseName}/${courseId}`);\n      return response.data.courseName;\n    } catch (error) {\n      console.error(\"Error fetching course name:\", error);\n      return null;\n    }\n  };\n\n  // Effect hook to fetch course name\n  useEffect(() => {\n    const fetchCourseName = async () => {\n      try {\n        if (courseId) {\n          setCourseName(await getCourseNameById(courseId));\n        }\n      } catch (error) {\n        console.error(\"Error fetching course name:\", error);\n      }\n    };\n    fetchCourseName();\n  }, [courseId]);\n\n  // Effect hook to fetch instructors\n  useEffect(() => {\n    const fetchInstructors = async () => {\n      try {\n        if (id) {\n          const response = await axios.get(`${allInstructors}/${id}`);\n          const fetchedInstructors = response.data;\n          fetchedInstructors.forEach(updateInstructorData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching instructors:\", error);\n      }\n    };\n    fetchInstructors();\n  }, [id]);\n\n  // State for lecture data\n  const [lectureData, setLectureData] = useState({\n    instructor: \"\",\n    date: \"\",\n    subject: \"\",\n    // Set to the first subject by default\n    lecture: \"\",\n    location: \"\"\n  });\n\n  // Event handler for input changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLectureData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n\n  // Event handler for instructor selection\n  const handleInstructorSelection = e => {\n    const selectedInstructor = e.target.value;\n    setDropUser(selectedInstructor);\n    setSelectedInstructor(selectedInstructor);\n  };\n\n  // Effect hook for instructor selection\n  useEffect(() => {}, [setDropUser]);\n\n  // Event handler for form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const course = courseName;\n    const scheduleData = {\n      course: course,\n      lecture: lectureData.lecture,\n      date: lectureData.date,\n      instructor: dropDropUser,\n      location: lectureData.location\n    };\n    // Check instructor availability\n    try {\n      const availabilityCheckResponse = await axios.post(checkAvailable, {\n        username: dropDropUser,\n        // Assuming dropDropUser is the instructor's ID\n        date: lectureData.date\n      });\n      if (availabilityCheckResponse.status === 200) {\n        // Instructor is available, proceed to add schedule\n        const response = await axios.post(addSchedule, scheduleData);\n        console.log(\"Schedule added successfully:\", response.data);\n      } else {\n        // Instructor is busy, show an error message\n        console.error(\"Instructor is busy on this date.\");\n        // You may want to display an error message to the user\n      }\n    } catch (error) {\n      console.error(\"Error checking instructor availability:\", error);\n    }\n    setLectureData({\n      instructor: \"\",\n      date: \"\",\n      subject: \"\",\n      lecture: \"\",\n      location: \"\"\n    });\n  };\n\n  // Effect hook to fetch schedules\n  useEffect(() => {\n    const fetchSchedules = async () => {\n      try {\n        const response = await axios.get(getSchedule, {\n          params: {\n            courseName\n          }\n        });\n        setSchedule(response.data.schedules);\n      } catch (error) {\n        console.error(\"Error fetching Schedule:\", error);\n      }\n    };\n    fetchSchedules();\n  }, [courseName, dropDropUser, handleSubmit]);\n\n  // JSX for rendering the component\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      children: [/*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CourseName, {\n        children: courseName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        children: \"Welcome admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentWrapper, {\n      children: [schedule.length === 0 ? /*#__PURE__*/_jsxDEV(NoScheduleMessage, {\n        children: \"No lectures scheduled.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(CardList, {\n        children: schedule.map((scheduleItem, index) => /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Lecture: \", scheduleItem.lecture]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Instructor: \", scheduleItem.instructor]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Date: \", new Date(scheduleItem.date).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Location: \", scheduleItem.location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Schedule a Lecture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"instructor\",\n          value: selectedInstructor,\n          onChange: handleInstructorSelection,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select Instructor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), instructorData.map((instructor, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: instructor,\n            children: instructor\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          placeholder: \"Date\",\n          value: lectureData.date,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"subject\",\n          value: lectureData.subject,\n          onChange: handleChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select Course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: courseName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lecture\",\n          placeholder: \"Lecture\",\n          value: lectureData.lecture,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"location\",\n          placeholder: \"Location\",\n          value: lectureData.location,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Schedule Lecture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 5\n  }, this);\n};\n\n// Export the IndividualCourse component\n_s(IndividualCourse, \"ikGr81GOU0D1Y3YztaN+SNTF5ZQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c10 = IndividualCourse;\nexport default IndividualCourse;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"TopBar\");\n$RefreshReg$(_c3, \"Heading\");\n$RefreshReg$(_c4, \"CourseName\");\n$RefreshReg$(_c5, \"ContentWrapper\");\n$RefreshReg$(_c6, \"CardList\");\n$RefreshReg$(_c7, \"NoScheduleMessage\");\n$RefreshReg$(_c8, \"Card\");\n$RefreshReg$(_c9, \"Form\");\n$RefreshReg$(_c10, \"IndividualCourse\");","map":{"version":3,"names":["React","useState","useEffect","styled","Logout","useNavigate","useParams","getSchedule","allInstructors","getCourseName","addSchedule","checkAvailable","axios","jsxDEV","_jsxDEV","ceruleanBlue","ivoryCream","darkGray","sageGreen","dustyRose","velvetNavy","white","Container","div","_c","TopBar","_c2","Heading","h1","_c3","CourseName","_c4","ContentWrapper","_c5","CardList","_c6","NoScheduleMessage","p","_c7","Card","_c8","Form","form","_c9","IndividualCourse","_s","courseId","navigate","dropDropUser","setDropUser","undefined","id","setId","courseName","setCourseName","instructorData","setInstructorData","selectedInstructor","setSelectedInstructor","schedule","setSchedule","adminKey","localStorage","getItem","userKey","adminUserData","JSON","parse","_id","updateInstructorData","instructor","existingInstructor","find","i","username","prevData","getCourseNameById","response","get","data","error","console","fetchCourseName","fetchInstructors","fetchedInstructors","forEach","lectureData","setLectureData","date","subject","lecture","location","handleChange","e","name","value","target","handleInstructorSelection","handleSubmit","preventDefault","course","scheduleData","availabilityCheckResponse","post","status","log","fetchSchedules","params","schedules","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","scheduleItem","index","className","Date","toLocaleDateString","onSubmit","onChange","required","disabled","type","placeholder","_c10","$RefreshReg$"],"sources":["C:/Users/Aditya/Desktop/Lecture-Scheduling-Module-master/client/src/components/IndividualCourse.jsx"],"sourcesContent":["// IndividualCourse.js\n\n// Import React and necessary modules\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Logout from \"./Logout\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport {\n  getSchedule,\n  allInstructors,\n  getCourseName,\n  addSchedule,\n  checkAvailable,\n} from \"../utils/APIRoutes\";\nimport axios from \"axios\";\n\n// Define color schemes\nconst ceruleanBlue = \"#007ba7\";\nconst ivoryCream = \"#fffdd0\";\nconst darkGray = \"#333333\";\nconst sageGreen = \"#8f9779\";\nconst dustyRose = \"#d2b48c\";\nconst velvetNavy = \"#001f3f\";\nconst white = \"#ffffff\";\n\n// Styled components with color schemes\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0;\n  height: 100vh;\n  background-color: ${ceruleanBlue};\n`;\n\nconst TopBar = styled.div`\n  width: 100%;\n  background: ${velvetNavy};\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Heading = styled.h1`\n  color: ${white};\n  font-size: 24px;\n  font-weight: bold;\n  margin-top: 5px;\n`;\n\nconst CourseName = styled.h1`\n  margin-bottom: 20px;\n  color: ${ivoryCream};\n`;\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 20px;\n`;\n\nconst CardList = styled.div`\n  width: 100%;\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n`;\n\nconst NoScheduleMessage = styled.p`\n  width: 100%;\n  text-align: center;\n  font-size: 18px;\n  color: ${white};\n`;\n\nconst Card = styled.div`\n  background-color: #ffffff;\n  border: 1px solid #ccc;\n  border-radius: 15px;\n  margin-bottom: 20px;\n  padding: 20px;\n  width: calc(45% - 20px);\n  box-sizing: border-box;\n  transition: transform 0.2s ease-in-out;\n  overflow: hidden;\n\n  &:hover {\n    transform: scale(1.06);\n  }\n\n  img {\n    width: 100%;\n    max-height: 200px;\n    object-fit: cover;\n    border-radius: 15px 15px 0 0;\n  }\n\n  .card-content {\n    padding: 10px;\n  }\n\n  h2 {\n    margin-bottom: 10px;\n    font-size: 20px;\n  }\n\n  p {\n    margin-bottom: 5px;\n    font-size: 16px;\n  }\n`;\n\nconst Form = styled.form`\n  width: 45%;\n  background-color: ${sageGreen};\n  color: ${darkGray};\n  border: 1px solid transparent;\n  border-radius: 15px;\n  text-align: center;\n  padding: 20px;\n\n  select,\n  input {\n    margin: 10px 0;\n    padding: 10px;\n    width: calc(100% - 20px);\n    border-radius: 5px;\n    border: 1px solid ${darkGray};\n    box-sizing: border-box;\n  }\n\n  button {\n    margin-top: 20px;\n    padding: 10px;\n    background-color: ${dustyRose};\n    color: ${white};\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-size: 16px;\n\n    &:hover {\n      background-color: ${sageGreen};\n    }\n  }\n`;\n\n// IndividualCourse component\nconst IndividualCourse = () => {\n  // Hooks for managing state\n  const { courseId } = useParams();\n  const navigate = useNavigate();\n  const [dropDropUser, setDropUser] = useState(undefined);\n  const [id, setId] = useState(null);\n  const [courseName, setCourseName] = useState(\"Dummy Course\");\n  const [instructorData, setInstructorData] = useState([]);\n  const [selectedInstructor, setSelectedInstructor] = useState(\"\");\n  const [schedule, setSchedule] = useState([]);\n\n  // Keys for local storage\n  const adminKey = localStorage.getItem(\"secret-key-admin\");\n  const userKey = localStorage.getItem(\"secret-key\");\n\n  // Effect hook to check user authentication\n  useEffect(() => {\n    if (adminKey) {\n      const adminUserData = JSON.parse(adminKey);\n      setId(adminUserData._id);\n    } else if (userKey) {\n      navigate(\"/instructor\");\n    } else {\n      navigate(\"/\");\n    }\n  }, [navigate, adminKey, userKey]);\n\n  // Function to update instructor data\n  const updateInstructorData = (instructor) => {\n    const existingInstructor = instructorData.find(\n      (i) => i === instructor.username\n    );\n    if (!existingInstructor) {\n      setInstructorData((prevData) => [...prevData, instructor.username]);\n    }\n  };\n\n  // Function to get course name by ID\n  const getCourseNameById = async (courseId) => {\n    try {\n      const response = await axios.get(`${getCourseName}/${courseId}`);\n      return response.data.courseName;\n    } catch (error) {\n      console.error(\"Error fetching course name:\", error);\n      return null;\n    }\n  };\n\n  // Effect hook to fetch course name\n  useEffect(() => {\n    const fetchCourseName = async () => {\n      try {\n        if (courseId) {\n          setCourseName(await getCourseNameById(courseId));\n        }\n      } catch (error) {\n        console.error(\"Error fetching course name:\", error);\n      }\n    };\n    fetchCourseName();\n  }, [courseId]);\n\n  // Effect hook to fetch instructors\n  useEffect(() => {\n    const fetchInstructors = async () => {\n      try {\n        if (id) {\n          const response = await axios.get(`${allInstructors}/${id}`);\n          const fetchedInstructors = response.data;\n          fetchedInstructors.forEach(updateInstructorData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching instructors:\", error);\n      }\n    };\n    fetchInstructors();\n  }, [id]);\n\n  // State for lecture data\n  const [lectureData, setLectureData] = useState({\n    instructor: \"\",\n    date: \"\",\n    subject: \"\", // Set to the first subject by default\n    lecture: \"\",\n    location: \"\",\n  });\n\n  // Event handler for input changes\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setLectureData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  // Event handler for instructor selection\n  const handleInstructorSelection = (e) => {\n    const selectedInstructor = e.target.value;\n    setDropUser(selectedInstructor);\n    setSelectedInstructor(selectedInstructor);\n  };\n\n  // Effect hook for instructor selection\n  useEffect(() => {}, [setDropUser]);\n\n  // Event handler for form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const course = courseName;\n    const scheduleData = {\n      course: course,\n      lecture: lectureData.lecture,\n      date: lectureData.date,\n      instructor: dropDropUser,\n      location: lectureData.location,\n    };\n    // Check instructor availability\n    try {\n      const availabilityCheckResponse = await axios.post(\n        checkAvailable,\n        {\n          username: dropDropUser, // Assuming dropDropUser is the instructor's ID\n          date: lectureData.date,\n        }\n      );\n\n      if (availabilityCheckResponse.status === 200) {\n        // Instructor is available, proceed to add schedule\n        const response = await axios.post(addSchedule, scheduleData);\n        console.log(\"Schedule added successfully:\", response.data);\n      } else {\n        // Instructor is busy, show an error message\n        console.error(\"Instructor is busy on this date.\");\n        // You may want to display an error message to the user\n      }\n    } catch (error) {\n      console.error(\"Error checking instructor availability:\", error);\n    }\n\n    setLectureData({\n      instructor: \"\",\n      date: \"\",\n      subject: \"\",\n      lecture: \"\",\n      location: \"\",\n    });\n  };\n\n  // Effect hook to fetch schedules\n  useEffect(() => {\n    const fetchSchedules = async () => {\n      try {\n        const response = await axios.get(getSchedule, {\n          params: { courseName },\n        });\n        setSchedule(response.data.schedules);\n      } catch (error) {\n        console.error(\"Error fetching Schedule:\", error);\n      }\n    };\n    fetchSchedules();\n  }, [courseName, dropDropUser, handleSubmit]);\n\n  // JSX for rendering the component\n  return (\n    <Container>\n      <TopBar>\n        <Logout />\n        <CourseName>{courseName}</CourseName>\n        <Heading>Welcome admin</Heading>\n      </TopBar>\n      <ContentWrapper>\n        {schedule.length === 0 ? (\n          <NoScheduleMessage>No lectures scheduled.</NoScheduleMessage>\n        ) : (\n          <CardList>\n            {schedule.map((scheduleItem, index) => (\n              <Card key={index}>\n                <div className=\"card-content\">\n                  <h2>Lecture: {scheduleItem.lecture}</h2>\n                  <p>Instructor: {scheduleItem.instructor}</p>\n                  <p>\n                    Date: {new Date(scheduleItem.date).toLocaleDateString()}\n                  </p>\n                  <p>Location: {scheduleItem.location}</p>\n                </div>\n              </Card>\n            ))}\n          </CardList>\n        )}\n\n        {/* Form for scheduling a lecture */}\n        <Form onSubmit={handleSubmit}>\n          <h2>Schedule a Lecture</h2>\n          <select\n            name=\"instructor\"\n            value={selectedInstructor}\n            onChange={handleInstructorSelection}\n            required\n          >\n            <option value=\"\" disabled>\n              Select Instructor\n            </option>\n            {instructorData.map((instructor, index) => (\n              <option key={index} value={instructor}>\n                {instructor}\n              </option>\n            ))}\n          </select>\n          <input\n            type=\"date\"\n            name=\"date\"\n            placeholder=\"Date\"\n            value={lectureData.date}\n            onChange={handleChange}\n            required\n          />\n          <select\n            name=\"subject\"\n            value={lectureData.subject}\n            onChange={handleChange}\n            required\n          >\n            <option value=\"\" disabled>\n              Select Course\n            </option>\n            <option>{courseName}</option>\n          </select>\n          <input\n            type=\"text\"\n            name=\"lecture\"\n            placeholder=\"Lecture\"\n            value={lectureData.lecture}\n            onChange={handleChange}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"location\"\n            placeholder=\"Location\"\n            value={lectureData.location}\n            onChange={handleChange}\n            required\n          />\n          <button type=\"submit\">Schedule Lecture</button>\n        </Form>\n      </ContentWrapper>\n    </Container>\n  );\n};\n\n// Export the IndividualCourse component\nexport default IndividualCourse;\n"],"mappings":";;AAAA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SACEC,WAAW,EACXC,cAAc,EACdC,aAAa,EACbC,WAAW,EACXC,cAAc,QACT,oBAAoB;AAC3B,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG,SAAS;AAC9B,MAAMC,UAAU,GAAG,SAAS;AAC5B,MAAMC,QAAQ,GAAG,SAAS;AAC1B,MAAMC,SAAS,GAAG,SAAS;AAC3B,MAAMC,SAAS,GAAG,SAAS;AAC3B,MAAMC,UAAU,GAAG,SAAS;AAC5B,MAAMC,KAAK,GAAG,SAAS;;AAEvB;AACA,MAAMC,SAAS,GAAGnB,MAAM,CAACoB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,sBAAsBR,YAAa;AACnC,CAAC;AAACS,EAAA,GAPIF,SAAS;AASf,MAAMG,MAAM,GAAGtB,MAAM,CAACoB,GAAI;AAC1B;AACA,gBAAgBH,UAAW;AAC3B;AACA;AACA;AACA,CAAC;AAACM,GAAA,GANID,MAAM;AAQZ,MAAME,OAAO,GAAGxB,MAAM,CAACyB,EAAG;AAC1B,WAAWP,KAAM;AACjB;AACA;AACA;AACA,CAAC;AAACQ,GAAA,GALIF,OAAO;AAOb,MAAMG,UAAU,GAAG3B,MAAM,CAACyB,EAAG;AAC7B;AACA,WAAWZ,UAAW;AACtB,CAAC;AAACe,GAAA,GAHID,UAAU;AAKhB,MAAME,cAAc,GAAG7B,MAAM,CAACoB,GAAI;AAClC;AACA;AACA;AACA;AACA,CAAC;AAACU,GAAA,GALID,cAAc;AAOpB,MAAME,QAAQ,GAAG/B,MAAM,CAACoB,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACY,GAAA,GAPID,QAAQ;AASd,MAAME,iBAAiB,GAAGjC,MAAM,CAACkC,CAAE;AACnC;AACA;AACA;AACA,WAAWhB,KAAM;AACjB,CAAC;AAACiB,GAAA,GALIF,iBAAiB;AAOvB,MAAMG,IAAI,GAAGpC,MAAM,CAACoB,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACiB,GAAA,GAnCID,IAAI;AAqCV,MAAME,IAAI,GAAGtC,MAAM,CAACuC,IAAK;AACzB;AACA,sBAAsBxB,SAAU;AAChC,WAAWD,QAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBA,QAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBE,SAAU;AAClC,aAAaE,KAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0BH,SAAU;AACpC;AACA;AACA,CAAC;;AAED;AAAAyB,GAAA,GAnCMF,IAAI;AAoCV,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B;EACA,MAAM;IAAEC;EAAS,CAAC,GAAGxC,SAAS,CAAC,CAAC;EAChC,MAAMyC,QAAQ,GAAG1C,WAAW,CAAC,CAAC;EAC9B,MAAM,CAAC2C,YAAY,EAAEC,WAAW,CAAC,GAAGhD,QAAQ,CAACiD,SAAS,CAAC;EACvD,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGnD,QAAQ,CAAC,IAAI,CAAC;EAClC,MAAM,CAACoD,UAAU,EAAEC,aAAa,CAAC,GAAGrD,QAAQ,CAAC,cAAc,CAAC;EAC5D,MAAM,CAACsD,cAAc,EAAEC,iBAAiB,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACwD,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAAC0D,QAAQ,EAAEC,WAAW,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAM4D,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;EACzD,MAAMC,OAAO,GAAGF,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;;EAElD;EACA7D,SAAS,CAAC,MAAM;IACd,IAAI2D,QAAQ,EAAE;MACZ,MAAMI,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACN,QAAQ,CAAC;MAC1CT,KAAK,CAACa,aAAa,CAACG,GAAG,CAAC;IAC1B,CAAC,MAAM,IAAIJ,OAAO,EAAE;MAClBjB,QAAQ,CAAC,aAAa,CAAC;IACzB,CAAC,MAAM;MACLA,QAAQ,CAAC,GAAG,CAAC;IACf;EACF,CAAC,EAAE,CAACA,QAAQ,EAAEc,QAAQ,EAAEG,OAAO,CAAC,CAAC;;EAEjC;EACA,MAAMK,oBAAoB,GAAIC,UAAU,IAAK;IAC3C,MAAMC,kBAAkB,GAAGhB,cAAc,CAACiB,IAAI,CAC3CC,CAAC,IAAKA,CAAC,KAAKH,UAAU,CAACI,QAC1B,CAAC;IACD,IAAI,CAACH,kBAAkB,EAAE;MACvBf,iBAAiB,CAAEmB,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEL,UAAU,CAACI,QAAQ,CAAC,CAAC;IACrE;EACF,CAAC;;EAED;EACA,MAAME,iBAAiB,GAAG,MAAO9B,QAAQ,IAAK;IAC5C,IAAI;MACF,MAAM+B,QAAQ,GAAG,MAAMjE,KAAK,CAACkE,GAAG,CAAE,GAAErE,aAAc,IAAGqC,QAAS,EAAC,CAAC;MAChE,OAAO+B,QAAQ,CAACE,IAAI,CAAC1B,UAAU;IACjC,CAAC,CAAC,OAAO2B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,OAAO,IAAI;IACb;EACF,CAAC;;EAED;EACA9E,SAAS,CAAC,MAAM;IACd,MAAMgF,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,IAAIpC,QAAQ,EAAE;UACZQ,aAAa,CAAC,MAAMsB,iBAAiB,CAAC9B,QAAQ,CAAC,CAAC;QAClD;MACF,CAAC,CAAC,OAAOkC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACDE,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACpC,QAAQ,CAAC,CAAC;;EAEd;EACA5C,SAAS,CAAC,MAAM;IACd,MAAMiF,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,IAAIhC,EAAE,EAAE;UACN,MAAM0B,QAAQ,GAAG,MAAMjE,KAAK,CAACkE,GAAG,CAAE,GAAEtE,cAAe,IAAG2C,EAAG,EAAC,CAAC;UAC3D,MAAMiC,kBAAkB,GAAGP,QAAQ,CAACE,IAAI;UACxCK,kBAAkB,CAACC,OAAO,CAAChB,oBAAoB,CAAC;QAClD;MACF,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACDG,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAAChC,EAAE,CAAC,CAAC;;EAER;EACA,MAAM,CAACmC,WAAW,EAAEC,cAAc,CAAC,GAAGtF,QAAQ,CAAC;IAC7CqE,UAAU,EAAE,EAAE;IACdkB,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IAAE;IACbC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE;EACZ,CAAC,CAAC;;EAEF;EACA,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCT,cAAc,CAAEZ,QAAQ,KAAM;MAC5B,GAAGA,QAAQ;MACX,CAACmB,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAME,yBAAyB,GAAIJ,CAAC,IAAK;IACvC,MAAMpC,kBAAkB,GAAGoC,CAAC,CAACG,MAAM,CAACD,KAAK;IACzC9C,WAAW,CAACQ,kBAAkB,CAAC;IAC/BC,qBAAqB,CAACD,kBAAkB,CAAC;EAC3C,CAAC;;EAED;EACAvD,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC+C,WAAW,CAAC,CAAC;;EAElC;EACA,MAAMiD,YAAY,GAAG,MAAOL,CAAC,IAAK;IAChCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAElB,MAAMC,MAAM,GAAG/C,UAAU;IACzB,MAAMgD,YAAY,GAAG;MACnBD,MAAM,EAAEA,MAAM;MACdV,OAAO,EAAEJ,WAAW,CAACI,OAAO;MAC5BF,IAAI,EAAEF,WAAW,CAACE,IAAI;MACtBlB,UAAU,EAAEtB,YAAY;MACxB2C,QAAQ,EAAEL,WAAW,CAACK;IACxB,CAAC;IACD;IACA,IAAI;MACF,MAAMW,yBAAyB,GAAG,MAAM1F,KAAK,CAAC2F,IAAI,CAChD5F,cAAc,EACd;QACE+D,QAAQ,EAAE1B,YAAY;QAAE;QACxBwC,IAAI,EAAEF,WAAW,CAACE;MACpB,CACF,CAAC;MAED,IAAIc,yBAAyB,CAACE,MAAM,KAAK,GAAG,EAAE;QAC5C;QACA,MAAM3B,QAAQ,GAAG,MAAMjE,KAAK,CAAC2F,IAAI,CAAC7F,WAAW,EAAE2F,YAAY,CAAC;QAC5DpB,OAAO,CAACwB,GAAG,CAAC,8BAA8B,EAAE5B,QAAQ,CAACE,IAAI,CAAC;MAC5D,CAAC,MAAM;QACL;QACAE,OAAO,CAACD,KAAK,CAAC,kCAAkC,CAAC;QACjD;MACF;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IACjE;IAEAO,cAAc,CAAC;MACbjB,UAAU,EAAE,EAAE;MACdkB,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC;;EAED;EACAzF,SAAS,CAAC,MAAM;IACd,MAAMwG,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAM7B,QAAQ,GAAG,MAAMjE,KAAK,CAACkE,GAAG,CAACvE,WAAW,EAAE;UAC5CoG,MAAM,EAAE;YAAEtD;UAAW;QACvB,CAAC,CAAC;QACFO,WAAW,CAACiB,QAAQ,CAACE,IAAI,CAAC6B,SAAS,CAAC;MACtC,CAAC,CAAC,OAAO5B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACD0B,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACrD,UAAU,EAAEL,YAAY,EAAEkD,YAAY,CAAC,CAAC;;EAE5C;EACA,oBACEpF,OAAA,CAACQ,SAAS;IAAAuF,QAAA,gBACR/F,OAAA,CAACW,MAAM;MAAAoF,QAAA,gBACL/F,OAAA,CAACV,MAAM;QAAA0G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVnG,OAAA,CAACgB,UAAU;QAAA+E,QAAA,EAAExD;MAAU;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACrCnG,OAAA,CAACa,OAAO;QAAAkF,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACTnG,OAAA,CAACkB,cAAc;MAAA6E,QAAA,GACZlD,QAAQ,CAACuD,MAAM,KAAK,CAAC,gBACpBpG,OAAA,CAACsB,iBAAiB;QAAAyE,QAAA,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAAC,gBAE7DnG,OAAA,CAACoB,QAAQ;QAAA2E,QAAA,EACNlD,QAAQ,CAACwD,GAAG,CAAC,CAACC,YAAY,EAAEC,KAAK,kBAChCvG,OAAA,CAACyB,IAAI;UAAAsE,QAAA,eACH/F,OAAA;YAAKwG,SAAS,EAAC,cAAc;YAAAT,QAAA,gBAC3B/F,OAAA;cAAA+F,QAAA,GAAI,WAAS,EAACO,YAAY,CAAC1B,OAAO;YAAA;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxCnG,OAAA;cAAA+F,QAAA,GAAG,cAAY,EAACO,YAAY,CAAC9C,UAAU;YAAA;cAAAwC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC5CnG,OAAA;cAAA+F,QAAA,GAAG,QACK,EAAC,IAAIU,IAAI,CAACH,YAAY,CAAC5B,IAAI,CAAC,CAACgC,kBAAkB,CAAC,CAAC;YAAA;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtD,CAAC,eACJnG,OAAA;cAAA+F,QAAA,GAAG,YAAU,EAACO,YAAY,CAACzB,QAAQ;YAAA;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC;QAAC,GARGI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CACX,eAGDnG,OAAA,CAAC2B,IAAI;QAACgF,QAAQ,EAAEvB,YAAa;QAAAW,QAAA,gBAC3B/F,OAAA;UAAA+F,QAAA,EAAI;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3BnG,OAAA;UACEgF,IAAI,EAAC,YAAY;UACjBC,KAAK,EAAEtC,kBAAmB;UAC1BiE,QAAQ,EAAEzB,yBAA0B;UACpC0B,QAAQ;UAAAd,QAAA,gBAER/F,OAAA;YAAQiF,KAAK,EAAC,EAAE;YAAC6B,QAAQ;YAAAf,QAAA,EAAC;UAE1B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACR1D,cAAc,CAAC4D,GAAG,CAAC,CAAC7C,UAAU,EAAE+C,KAAK,kBACpCvG,OAAA;YAAoBiF,KAAK,EAAEzB,UAAW;YAAAuC,QAAA,EACnCvC;UAAU,GADA+C,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eACTnG,OAAA;UACE+G,IAAI,EAAC,MAAM;UACX/B,IAAI,EAAC,MAAM;UACXgC,WAAW,EAAC,MAAM;UAClB/B,KAAK,EAAET,WAAW,CAACE,IAAK;UACxBkC,QAAQ,EAAE9B,YAAa;UACvB+B,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFnG,OAAA;UACEgF,IAAI,EAAC,SAAS;UACdC,KAAK,EAAET,WAAW,CAACG,OAAQ;UAC3BiC,QAAQ,EAAE9B,YAAa;UACvB+B,QAAQ;UAAAd,QAAA,gBAER/F,OAAA;YAAQiF,KAAK,EAAC,EAAE;YAAC6B,QAAQ;YAAAf,QAAA,EAAC;UAE1B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTnG,OAAA;YAAA+F,QAAA,EAASxD;UAAU;YAAAyD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACTnG,OAAA;UACE+G,IAAI,EAAC,MAAM;UACX/B,IAAI,EAAC,SAAS;UACdgC,WAAW,EAAC,SAAS;UACrB/B,KAAK,EAAET,WAAW,CAACI,OAAQ;UAC3BgC,QAAQ,EAAE9B,YAAa;UACvB+B,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFnG,OAAA;UACE+G,IAAI,EAAC,MAAM;UACX/B,IAAI,EAAC,UAAU;UACfgC,WAAW,EAAC,UAAU;UACtB/B,KAAK,EAAET,WAAW,CAACK,QAAS;UAC5B+B,QAAQ,EAAE9B,YAAa;UACvB+B,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFnG,OAAA;UAAQ+G,IAAI,EAAC,QAAQ;UAAAhB,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEhB,CAAC;;AAED;AAAApE,EAAA,CA7PMD,gBAAgB;EAAA,QAECtC,SAAS,EACbD,WAAW;AAAA;AAAA0H,IAAA,GAHxBnF,gBAAgB;AA8PtB,eAAeA,gBAAgB;AAAC,IAAApB,EAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAoF,IAAA;AAAAC,YAAA,CAAAxG,EAAA;AAAAwG,YAAA,CAAAtG,GAAA;AAAAsG,YAAA,CAAAnG,GAAA;AAAAmG,YAAA,CAAAjG,GAAA;AAAAiG,YAAA,CAAA/F,GAAA;AAAA+F,YAAA,CAAA7F,GAAA;AAAA6F,YAAA,CAAA1F,GAAA;AAAA0F,YAAA,CAAAxF,GAAA;AAAAwF,YAAA,CAAArF,GAAA;AAAAqF,YAAA,CAAAD,IAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}